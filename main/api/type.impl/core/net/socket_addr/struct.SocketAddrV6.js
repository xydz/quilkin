(function() {
    var type_impls = Object.fromEntries([["corrosion",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowDecode%3C'de,+__Context%3E-for-SocketAddrV6\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/features/impl_std.rs.html#413\">Source</a><a href=\"#impl-BorrowDecode%3C'de,+__Context%3E-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, __Context&gt; <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html\" title=\"trait bincode::de::BorrowDecode\">BorrowDecode</a>&lt;'de, __Context&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/features/impl_std.rs.html#413\">Source</a><a href=\"#method.borrow_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html#tymethod.borrow_decode\" class=\"fn\">borrow_decode</a>&lt;D&gt;(decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.DecodeError.html\" title=\"enum bincode::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecoder.html\" title=\"trait bincode::de::BorrowDecoder\">BorrowDecoder</a>&lt;'de, Context = __Context&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this type with the given <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.BorrowDecode.html\" title=\"trait bincode::de::BorrowDecode\">BorrowDecode</a>.</div></details></div></details>","BorrowDecode<'de, __Context>","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-Clone-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#686\">Source</a></span><a href=\"#impl-Debug-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#687\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CContext%3E-for-SocketAddrV6\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/features/impl_std.rs.html#406\">Source</a><a href=\"#impl-Decode%3CContext%3E-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Context&gt; <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html\" title=\"trait bincode::de::Decode\">Decode</a>&lt;Context&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/features/impl_std.rs.html#407\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;D&gt;(decoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut D</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.DecodeError.html\" title=\"enum bincode::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decoder.html\" title=\"trait bincode::de::Decoder\">Decoder</a>&lt;Context = Context&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this type with the given <a href=\"https://docs.rs/bincode/2.0.1/bincode/de/trait.Decode.html\" title=\"trait bincode::de::Decode\">Decode</a>.</div></details></div></details>","Decode<Context>","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-SocketAddrV6\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.226/src/serde_core/de/impls.rs.html#1777-1780\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.226/src/serde_core/de/impls.rs.html#1777-1780\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.226/serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde_core/1.0.226/serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#659\">Source</a></span><a href=\"#impl-Display-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#660\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-SocketAddrV6\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/features/impl_std.rs.html#399\">Source</a><a href=\"#impl-Encode-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encode.html\" title=\"trait bincode::enc::Encode\">Encode</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/bincode/2.0.1/src/bincode/features/impl_std.rs.html#400\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encode.html#tymethod.encode\" class=\"fn\">encode</a>&lt;E&gt;(&amp;self, encoder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"https://docs.rs/bincode/2.0.1/bincode/error/enum.EncodeError.html\" title=\"enum bincode::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/bincode/2.0.1/bincode/enc/trait.Encoder.html\" title=\"trait bincode::enc::Encoder\">Encoder</a>,</div></h4></section></summary><div class='docblock'>Encode a given type.</div></details></div></details>","Encode","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/parser.rs.html#425\">Source</a></span><a href=\"#impl-FromStr-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/parser.rs.html#426\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/parser/struct.AddrParseError.html\" title=\"struct core::net::parser::AddrParseError\">AddrParseError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/parser.rs.html#427\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/parser/struct.AddrParseError.html\" title=\"struct core::net::parser::AddrParseError\">AddrParseError</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.85.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-Hash-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.85.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Identity-for-SocketAddrV6\" class=\"impl\"><a href=\"#impl-Identity-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Identity for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Addr\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Addr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Addr</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h4></section></summary><div class='docblock'>The type of the unique (cluster-wide) address of this identity <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.renew\" class=\"method trait-impl\"><a href=\"#method.renew\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">renew</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>&gt;</h4></section></summary><div class='docblock'>Opt-in on auto-rejoining by providing a new identity. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.addr\" class=\"method trait-impl\"><a href=\"#method.addr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">addr</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h4></section></summary><div class='docblock'>Return this identity’s unique address <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.win_addr_conflict\" class=\"method trait-impl\"><a href=\"#method.win_addr_conflict\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">win_addr_conflict</a>(&amp;self, _adversary: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Decides which to keep when Foca encounters multiple identities\nsharing the same address <a>Read more</a></div></details></div></details>","Identity","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-SocketAddrV6\" class=\"impl\"><a href=\"#impl-JsonSchema-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl JsonSchema for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a href=\"#method.is_referenceable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a href=\"#method.schema_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_id\" class=\"method trait-impl\"><a href=\"#method.schema_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_id</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a string that uniquely identifies the schema produced by this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a href=\"#method.json_schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">json_schema</a>(_: &amp;mut SchemaGenerator) -&gt; Schema</h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a>Read more</a></div></details></div></details>","JsonSchema","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-Ord-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#980-982\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1001-1003\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1027-1029\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-PartialEq-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-PartialOrd-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1335\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1353\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-SocketAddrV6\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.226/src/serde_core/ser/impls.rs.html#886\">Source</a><a href=\"#impl-Serialize-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.226/src/serde_core/ser/impls.rs.html#887-889\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde_core/1.0.226/serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SocketAddrV6\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/parser.rs.html#406\">Source</a><a href=\"#impl-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_ascii\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/parser.rs.html#419\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.parse_ascii\" class=\"fn\">parse_ascii</a>(b: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/parser/struct.AddrParseError.html\" title=\"struct core::net::parser::AddrParseError\">AddrParseError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>addr_parse_ascii</code>)</span></div></span></summary><div class=\"docblock\"><p>Parse an IPv6 socket address from a slice of bytes.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(addr_parse_ascii)]\n\n</span><span class=\"kw\">use </span>std::net::{Ipv6Addr, SocketAddrV6};\n\n<span class=\"kw\">let </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0x2001</span>, <span class=\"number\">0xdb8</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);\n\n<span class=\"macro\">assert_eq!</span>(SocketAddrV6::parse_ascii(<span class=\"string\">b\"[2001:db8::1]:8080\"</span>), <span class=\"prelude-val\">Ok</span>(socket));</code></pre></div>\n</div></details></div></details>",0,"corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SocketAddrV6\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#395\">Source</a><a href=\"#impl-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#416\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.new\" class=\"fn\">new</a>(\n    ip: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/ip_addr/struct.Ipv6Addr.html\" title=\"struct core::net::ip_addr::Ipv6Addr\">Ipv6Addr</a>,\n    port: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u16.html\">u16</a>,\n    flowinfo: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n    scope_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h4></section></summary><div class=\"docblock\"><p>Creates a new socket address from an <a href=\"https://doc.rust-lang.org/1.85.0/core/net/ip_addr/struct.Ipv6Addr.html\" title=\"struct core::net::ip_addr::Ipv6Addr\"><code>IPv6</code> address</a>, a 16-bit port number,\nand the <code>flowinfo</code> and <code>scope_id</code> fields.</p>\n<p>For more information on the meaning and layout of the <code>flowinfo</code> and <code>scope_id</code>\nparameters, see <a href=\"https://tools.ietf.org/html/rfc2553#section-3.3\">IETF RFC 2553, Section 3.3</a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#434\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.ip\" class=\"fn\">ip</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/ip_addr/struct.Ipv6Addr.html\" title=\"struct core::net::ip_addr::Ipv6Addr\">Ipv6Addr</a></h4></section></summary><div class=\"docblock\"><p>Returns the IP address associated with this socket address.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(socket.ip(), <span class=\"kw-2\">&amp;</span>Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_ip\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0, const unstable\">1.9.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/131714\" title=\"Tracking issue for const_sockaddr_setters\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#452\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.set_ip\" class=\"fn\">set_ip</a>(&amp;mut self, new_ip: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/ip_addr/struct.Ipv6Addr.html\" title=\"struct core::net::ip_addr::Ipv6Addr\">Ipv6Addr</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the IP address associated with this socket address.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);\nsocket.set_ip(Ipv6Addr::new(<span class=\"number\">76</span>, <span class=\"number\">45</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(socket.ip(), <span class=\"kw-2\">&amp;</span>Ipv6Addr::new(<span class=\"number\">76</span>, <span class=\"number\">45</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.port\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#470\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.port\" class=\"fn\">port</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class=\"docblock\"><p>Returns the port number associated with this socket address.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(socket.port(), <span class=\"number\">8080</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_port\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0, const unstable\">1.9.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/131714\" title=\"Tracking issue for const_sockaddr_setters\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#488\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.set_port\" class=\"fn\">set_port</a>(&amp;mut self, new_port: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the port number associated with this socket address.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);\nsocket.set_port(<span class=\"number\">4242</span>);\n<span class=\"macro\">assert_eq!</span>(socket.port(), <span class=\"number\">4242</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flowinfo\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#516\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.flowinfo\" class=\"fn\">flowinfo</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the flow information associated with this address.</p>\n<p>This information corresponds to the <code>sin6_flowinfo</code> field in C’s <code>netinet/in.h</code>,\nas specified in <a href=\"https://tools.ietf.org/html/rfc2553#section-3.3\">IETF RFC 2553, Section 3.3</a>.\nIt combines information about the flow label and the traffic class as specified\nin <a href=\"https://tools.ietf.org/html/rfc2460\">IETF RFC 2460</a>, respectively <a href=\"https://tools.ietf.org/html/rfc2460#section-6\">Section 6</a> and <a href=\"https://tools.ietf.org/html/rfc2460#section-7\">Section 7</a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">10</span>, <span class=\"number\">0</span>);\n<span class=\"macro\">assert_eq!</span>(socket.flowinfo(), <span class=\"number\">10</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_flowinfo\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0, const unstable\">1.9.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/131714\" title=\"Tracking issue for const_sockaddr_setters\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#536\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.set_flowinfo\" class=\"fn\">set_flowinfo</a>(&amp;mut self, new_flowinfo: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the flow information associated with this socket address.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#method.flowinfo\" title=\"method core::net::socket_addr::SocketAddrV6::flowinfo\"><code>SocketAddrV6::flowinfo</code></a>’s documentation for more details.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">10</span>, <span class=\"number\">0</span>);\nsocket.set_flowinfo(<span class=\"number\">56</span>);\n<span class=\"macro\">assert_eq!</span>(socket.flowinfo(), <span class=\"number\">56</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scope_id\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const since 1.69.0\">1.0.0 (const: 1.69.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#559\">Source</a></span><h4 class=\"code-header\">pub const fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.scope_id\" class=\"fn\">scope_id</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the scope ID associated with this address.</p>\n<p>This information corresponds to the <code>sin6_scope_id</code> field in C’s <code>netinet/in.h</code>,\nas specified in <a href=\"https://tools.ietf.org/html/rfc2553#section-3.3\">IETF RFC 2553, Section 3.3</a>.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">78</span>);\n<span class=\"macro\">assert_eq!</span>(socket.scope_id(), <span class=\"number\">78</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_scope_id\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.9.0, const unstable\">1.9.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/131714\" title=\"Tracking issue for const_sockaddr_setters\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#579\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#tymethod.set_scope_id\" class=\"fn\">set_scope_id</a>(&amp;mut self, new_scope_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class=\"docblock\"><p>Changes the scope ID associated with this socket address.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html#method.scope_id\" title=\"method core::net::socket_addr::SocketAddrV6::scope_id\"><code>SocketAddrV6::scope_id</code></a>’s documentation for more details.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::net::{SocketAddrV6, Ipv6Addr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>socket = SocketAddrV6::new(Ipv6Addr::new(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>), <span class=\"number\">8080</span>, <span class=\"number\">0</span>, <span class=\"number\">78</span>);\nsocket.set_scope_id(<span class=\"number\">42</span>);\n<span class=\"macro\">assert_eq!</span>(socket.scope_id(), <span class=\"number\">42</span>);</code></pre></div>\n</div></details></div></details>",0,"corrosion::Peer"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToSocketAddrs-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/std/net/socket_addr.rs.html#197\">Source</a></span><a href=\"#impl-ToSocketAddrs-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/std/net/socket_addr/trait.ToSocketAddrs.html\" title=\"trait std::net::socket_addr::ToSocketAddrs\">ToSocketAddrs</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Iter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/net/socket_addr.rs.html#198\">Source</a><a href=\"#associatedtype.Iter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.85.0/std/net/socket_addr/trait.ToSocketAddrs.html#associatedtype.Iter\" class=\"associatedtype\">Iter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>&gt;</h4></section></summary><div class='docblock'>Returned iterator over socket addresses which this type may correspond\nto.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_socket_addrs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.85.0/src/std/net/socket_addr.rs.html#199\">Source</a><a href=\"#method.to_socket_addrs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/std/net/socket_addr/trait.ToSocketAddrs.html#tymethod.to_socket_addrs\" class=\"fn\">to_socket_addrs</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/option/struct.IntoIter.html\" title=\"struct core::option::IntoIter\">IntoIter</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\">SocketAddr</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Converts this object to an iterator of resolved <a href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/enum.SocketAddr.html\" title=\"enum core::net::socket_addr::SocketAddr\"><code>SocketAddr</code></a>s. <a href=\"https://doc.rust-lang.org/1.85.0/std/net/socket_addr/trait.ToSocketAddrs.html#tymethod.to_socket_addrs\">Read more</a></div></details></div></details>","ToSocketAddrs","corrosion::Peer"],["<section id=\"impl-Copy-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-Copy-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section>","Copy","corrosion::Peer"],["<section id=\"impl-Eq-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-Eq-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section>","Eq","corrosion::Peer"],["<section id=\"impl-StructuralPartialEq-for-SocketAddrV6\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.85.0/src/core/net/socket_addr.rs.html#135\">Source</a></span><a href=\"#impl-StructuralPartialEq-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section>","StructuralPartialEq","corrosion::Peer"],["<section id=\"impl-ToSocketAddrs-for-SocketAddrV6\" class=\"impl\"><a href=\"#impl-ToSocketAddrs-for-SocketAddrV6\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToSocketAddrs for <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/core/net/socket_addr/struct.SocketAddrV6.html\" title=\"struct core::net::socket_addr::SocketAddrV6\">SocketAddrV6</a></h3></section>","ToSocketAddrs","corrosion::Peer"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[70709]}